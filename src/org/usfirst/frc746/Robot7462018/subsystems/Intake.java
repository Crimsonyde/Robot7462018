// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc746.Robot7462018.subsystems;

import org.usfirst.frc746.Robot7462018.RobotMap;
import org.usfirst.frc746.Robot7462018.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController intakeMotor = RobotMap.intakeintakeMotor;
    private final SpeedController intakeMotor2 = RobotMap.intakeintakeMotor2;
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        //setDefaultCommand(new robotIntake());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    
    public void stop() {
    	intakeMotor.set(0);
    	intakeMotor2.set(0);
    }
    
    public void leftIntakeMotor(double speed) {
    	if (speed > 1 || speed < -1) {
    		System.out.println("Warning, unsafe intake speed!");
    		   	}
    	else {
    		intakeMotor.set(speed);
    	}
    }
    	
    	public void rightIntakeMotor(double speed) {
        	if (speed > 1 || speed < -1) {
        		System.out.println("Warning, unsafe intake speed!");
        		   	}
        	else {
        		intakeMotor2.set(speed);
        	}
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

